{"version":3,"sources":["StockComponents.js","index.js","sinaFinanceApi.js"],"names":["StockHeader","props","StockRow","code","stockName","quantity","price","value","percent","StockCaption","name","total","StockTable","holdings","rows","map","holding","key","AccountTables","accounts","accountsTables","account","totalAll","Math","round","getCodes","codes","Set","forEach","add","Array","from","addQuantityToCodesInfo","codesInfo","Object","keys","addTotalAccount","totalHoldings","push","unshift","addInfoToAccounts","i","toFixed","sort","a","b","length","fetch","then","it","json","getStockPricePromise","ReactDOM","render","document","getElementById","Promise","resolve","_","script","createElement","addEventListener","getStockInfo","codeVar","eval","getCurrentPrice","stockInfo","parseFloat","split","getStockName","src","codeParas","head","appendChild","join"],"mappings":"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","file":"static/js/main.f7a8aa12.chunk.js","sourcesContent":["import React from 'react';\n// props: hasPercent 是否有百分比仓位\nconst StockHeader = props => (\n  <thead>\n    <tr>\n      <th>证券代码</th>\n      <th>股票名称</th>\n      <th>持仓</th>\n      <th>现价</th>\n      <th>市值</th>\n      <th>仓位</th>\n    </tr>\n  </thead>\n);\n\n// props: code stockName quantity price value percent\nconst StockRow = props => (\n  <tr>\n    <td>{props.code}</td>\n    <td>{props.stockName}</td>\n    <td>{props.quantity}</td>\n    <td>{props.price}</td>\n    <td>{props.value}</td>\n    {props.percent && <td>{props.percent}</td>}\n  </tr>\n);\n\nconst StockCaption = ({ name, total }) => (\n  <caption>{name + \": \" + total + \"元\"}</caption>\n);\n\n// props: holdings[holding], name, total\nconst StockTable = ({ holdings, name, total }) => {\n  const rows = holdings.map(holding => (\n    <StockRow {...holding} key={holding.code}></StockRow>\n  ));\n  return (\n    <table>\n      <StockCaption name={name} total={total} />\n      <StockHeader />\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\n// accounts-[holdings]-{}\nconst AccountTables = ({accounts}) => {\n  const accountsTables = accounts.map(account => (\n    <StockTable {...account} key={account.name}></StockTable>\n  ));\n  const totalAll = accounts[0].total;\n  return (\n    <div>\n      <h3>Total Holding: {Math.round(totalAll) + \"元\"}</h3>\n      <span>(含王丽君代管账户资产约16~17万)</span>\n      {accountsTables}\n    </div>\n  );\n}\n\nexport default AccountTables;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport getStockPricePromise from \"./sinaFinanceApi\";\nimport AccountTables from \"./StockComponents\";\n\n(async function() {\n  // 获取json文件内accounts对象\n  const accounts = await fetch(\"./holdings.json\").then(it => it.json());\n\n  // 提取accounts内所有股票代码\n  const codes = getCodes(accounts);\n\n  // 获取各股票代码对应股价和股票名称对象\n  const codesInfo = await getStockPricePromise(codes);\n\n  // 增加codeInfo股票总数量\n  addQuantityToCodesInfo(accounts, codesInfo);\n\n  addTotalAccount(accounts, codesInfo);\n\n  // 增加股票价格信息，计算各行、各账户、所有账户总市值\n  addInfoToAccounts(accounts, codesInfo);\n  ReactDOM.render(\n    <AccountTables accounts={accounts} />,\n    document.getElementById(\"root\")\n  );\n})();\n\n// 提取accounts所有股票代码\nfunction getCodes(accounts) {\n  let codes = new Set();\n  accounts.forEach(({ holdings }) => {\n    holdings.forEach(({ code }) => {\n      codes.add(code);\n    });\n  });\n  return Array.from(codes);\n}\n\n// 为codesInfo增加总数量\nfunction addQuantityToCodesInfo(accounts, codesInfo) {\n  Object.keys(codesInfo).forEach(key => (codesInfo[key].quantity = 0));\n  for (let { holdings } of accounts) {\n    for (let { code, quantity } of holdings) {\n      codesInfo[code].quantity += quantity;\n    }\n  }\n}\n\nfunction addTotalAccount(accounts, codesInfo) {\n  const totalHoldings = [];\n  for (const code in codesInfo) {\n    totalHoldings.push({\n      code,\n      stockName: codesInfo[code].name,\n      quantity: codesInfo[code].quantity\n    });\n  }\n  accounts.unshift({ name: \"总计\", holdings: totalHoldings });\n}\n\n// 为accounts添加totalAll字段(所有账户宗资产)\n// 为各个account添加 total字段(单个账户总资产)\n// 为每个account.holdings添加price(单只股票价格)和value字段(单只股票市值)\nfunction addInfoToAccounts(accounts, codesInfo) {\n  for (let i = 0; i < accounts.length; i++) {\n    let total = 0;\n    accounts[i].holdings.forEach(holding => {\n      const price = codesInfo[holding.code].price;\n      const value = price * holding.quantity;\n      total += value;\n      holding.stockName = codesInfo[holding.code].name;\n      holding.price = Math.round(price * 100) / 100;\n      holding.value = Math.round(value);\n    });\n    accounts[i].total = Math.round(total);\n    accounts[i].holdings.forEach(holding => {\n      holding.percent = (holding.value / accounts[i].total * 100).toFixed(2) + \"%\";\n    })\n    accounts[i].holdings.sort((a, b) => b.value - a.value);\n  }\n}\n\n\n","export default function getStockPricePromise(codes) {\n  return new Promise((resolve, _) => {\n    const script = document.createElement(\"script\");\n\n    script.addEventListener(\"load\", () => {\n      let codesInfo = {};\n      codes.forEach(code => {\n        const stockInfo = getStockInfo(code);\n        codesInfo[code] = {\n          name: getStockName(stockInfo),\n          price: getCurrentPrice(stockInfo),\n        };\n      });\n      resolve(codesInfo);\n\n      function getStockInfo(code) {\n        const codeVar =\n          code[0] === \"6\" ? \"hq_str_sh\" + code : \"hq_str_sz\" + code;\n        // eslint-disable-next-line\n        return eval(codeVar);\n      }\n\n      function getCurrentPrice(stockInfo) {\n        return parseFloat(stockInfo.split(\",\")[3]);\n      }\n\n      function getStockName(stockInfo) {\n        return stockInfo.split(\",\")[0];\n      }\n    });\n\n    script.src = \"http://hq.sinajs.cn/list=\" + codeParas(codes);\n    document.head.appendChild(script);\n  });\n\n  function codeParas(codes) {\n    return codes\n      .map(code => (code[0] === \"6\" ? \"sh\" + code : \"sz\" + code))\n      .join(\",\");\n  }\n}\n"],"sourceRoot":""}